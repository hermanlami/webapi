// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskManagementSystem.DAL;

#nullable disable

namespace TaskManagementSystem.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TaskManagementSystem.DAL.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("PersonType")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("People");

                    b.HasDiscriminator<byte>("PersonType");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TaskManagementSystem.DAL.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectManagerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProjectManagerId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("TaskManagementSystem.DAL.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("TaskManagementSystem.DAL.Entities.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Importance")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("TaskManagementSystem.DAL.Entities.TaskTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TagId");

                    b.HasIndex("TaskId");

                    b.ToTable("TaskTags");
                });

            modelBuilder.Entity("TaskManagementSystem.DAL.Entities.Admin", b =>
                {
                    b.HasBaseType("TaskManagementSystem.DAL.Entities.Person");

                    b.HasDiscriminator().HasValue((byte)1);
                });

            modelBuilder.Entity("TaskManagementSystem.DAL.Entities.Developer", b =>
                {
                    b.HasBaseType("TaskManagementSystem.DAL.Entities.Person");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.HasIndex("ManagerId");

                    b.HasDiscriminator().HasValue((byte)3);
                });

            modelBuilder.Entity("TaskManagementSystem.DAL.Entities.ProjectManager", b =>
                {
                    b.HasBaseType("TaskManagementSystem.DAL.Entities.Person");

                    b.HasDiscriminator().HasValue((byte)2);
                });

            modelBuilder.Entity("TaskManagementSystem.DAL.Entities.Project", b =>
                {
                    b.HasOne("TaskManagementSystem.DAL.Entities.ProjectManager", "ProjectManager")
                        .WithMany()
                        .HasForeignKey("ProjectManagerId")
                        .IsRequired();

                    b.Navigation("ProjectManager");
                });

            modelBuilder.Entity("TaskManagementSystem.DAL.Entities.Task", b =>
                {
                    b.HasOne("TaskManagementSystem.DAL.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("TaskManagementSystem.DAL.Entities.TaskTag", b =>
                {
                    b.HasOne("TaskManagementSystem.DAL.Entities.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .IsRequired();

                    b.HasOne("TaskManagementSystem.DAL.Entities.Task", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .IsRequired();

                    b.Navigation("Tag");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("TaskManagementSystem.DAL.Entities.Developer", b =>
                {
                    b.HasOne("TaskManagementSystem.DAL.Entities.ProjectManager", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId")
                        .IsRequired();

                    b.Navigation("Manager");
                });
#pragma warning restore 612, 618
        }
    }
}
